const telegramService = require('../services/telegramService');
const homeworkService = require('../services/homeworkService');
const mainKeyboards = require('../keyboards/mainKeyboards');
const messages = require('../constants/messages');

async function handleCommand(chatId, text, user) {
  const command = text.split(' ')[0];

  switch (command) {
    case '/start':
      await sendWelcomeMessage(chatId, user);
      break;
    case '/menu':
      await showMainMenu(chatId, user);
      break;
    case '/help':
      await sendHelpMessage(chatId);
      break;
    case '/homework':
      await homeworkService.showHomework(chatId, user);
      break;
    case '/schedule':
      await telegramService.sendMessage(chatId, 'üìÖ –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è...');
      break;
    case '/test':
      await telegramService.sendMessage(chatId, '‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
      break;
    default:
      await telegramService.sendMessage(chatId, '‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.');
  }
}

async function handleTextMessage(chatId, text, user) {
  const menuActions = {
    'üìö –ú–æ–∏ –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è': () => homeworkService.showHomework(chatId, user),
    'üìÖ –ú–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ': () => telegramService.sendMessage(chatId, 'üìÖ –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è...'),
    'üè¢ –ú–æ–∏ —Ñ–∏–ª–∏–∞–ª—ã': () => showBranches(chatId, user),
    'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–∏–ª–∏–∞–ª–∞': () => telegramService.sendMessage(chatId, 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...'),
    '‚úèÔ∏è –í—ã–¥–∞—Ç—å –î–ó': () => telegramService.sendMessage(chatId, '‚úèÔ∏è –§—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞—á–∏ –î–ó –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è...'),
    '‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –î–ó': () => telegramService.sendMessage(chatId, '‚úÖ –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –î–ó –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è...'),
    'üÜò –ü–æ–º–æ—â—å': () => sendHelpMessage(chatId),
    'üëã –¢–µ—Å—Ç': () => telegramService.sendMessage(chatId, '‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!')
  };

  if (menuActions[text]) {
    await menuActions[text]();
  } else {
    await showMainMenu(chatId, user);
  }
}

async function sendWelcomeMessage(chatId, user) {
  const welcomeText = messages.getWelcomeMessage(user);
  await telegramService.sendMessage(chatId, welcomeText);
  await showMainMenu(chatId, user);
}

async function showMainMenu(chatId, user) {
  const keyboard = mainKeyboards.getKeyboardByRole(user.role);
  const menuText = mainKeyboards.getMenuTextByRole(user.role);
  await telegramService.sendMessage(chatId, menuText, keyboard);
}

async function sendHelpMessage(chatId) {
  await telegramService.sendMessage(chatId, messages.HELP_MESSAGE);
}

async function showBranches(chatId, user) {
  if (user.role !== 'director' && user.role !== 'admin') {
    await telegramService.sendMessage(chatId, '‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è–º –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.');
    return;
  }
  await telegramService.sendMessage(chatId, 'üè¢ –§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª–∏–∞–ª–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è...');
}

module.exports = {
  handleCommand,
  handleTextMessage
};